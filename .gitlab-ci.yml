---
image: docker:latest
services:
  - docker:dind

stages:
  - build
  - publish

variables:
  CINC_BUILD: "false"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "/certs/client"

workflow:
  rules:
    # Run if we trigger a pipeline from the web
    - if: $CI_PIPELINE_SOURCE == "web" && $CINC_BUILD != "false"
    # Run if this is a merge request
    - if: $CI_MERGE_REQUEST_ID

before_script:
  - docker context create docker-images
  - docker context use docker-images
  - docker buildx create --use docker-images

.omnibus-almalinux_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - omnibus-almalinux/*
    - if: $CINC_BUILD =~ /omnibus-almalinux|^omnibus$|all/

.omnibus-amazonlinux_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - omnibus-amazonlinux/*
    - if: $CINC_BUILD =~ /omnibus-amazonlinux|^omnibus$|all/

.omnibus-debian_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - omnibus-debian/*
    - if: $CINC_BUILD =~ /omnibus-debian|^omnibus$|all/

.omnibus-opensuse_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - omnibus-opensuse/*
    - if: $CINC_BUILD =~ /omnibus-opensuse|^omnibus$|all/

.omnibus-rockylinux_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - omnibus-rockylinux/*
    - if: $CINC_BUILD =~ /omnibus-rockylinux|^omnibus$|all/

.omnibus-ubuntu_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - omnibus-ubuntu/*
    - if: $CINC_BUILD =~ /omnibus-ubuntu|^omnibus$|all/

.docker-auditor_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - docker-auditor/*
    - if: $CINC_BUILD =~ /docker-auditor|all/

.vagrant-virtualbox_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - vagrant-virtualbox/*
    - if: $CINC_BUILD =~ /vagrant-virtualbox|all/

.build:
  stage: build
  tags:
    - docker-x86_64

build:omnibus-almalinux:
  extends:
    - .build
  tags:
    - docker-x86_64-v3
  rules:
    - !reference [.omnibus-almalinux_rules, rules]
  script:
    - cd omnibus-almalinux
    - docker buildx bake --set="*.output=type=cacheonly"

build:omnibus-amazonlinux:
  extends:
    - .build
  rules:
    - !reference [.omnibus-amazonlinux_rules, rules]
  script:
    - cd omnibus-amazonlinux
    - docker buildx bake --set="*.output=type=cacheonly"

build:omnibus-debian:
  extends:
    - .build
  rules:
    - !reference [.omnibus-debian_rules, rules]
  script:
    - cd omnibus-debian
    - docker buildx bake --set="*.output=type=cacheonly"

build:omnibus-opensuse:
  extends:
    - .build
  rules:
    - !reference [.omnibus-opensuse_rules, rules]
  script:
    - cd omnibus-opensuse
    - docker buildx bake --set="*.output=type=cacheonly"

build:omnibus-rockylinux:
  extends:
    - .build
  rules:
    - !reference [.omnibus-rockylinux_rules, rules]
  script:
    - cd omnibus-rockylinux
    - docker buildx bake --set="*.output=type=cacheonly"

build:omnibus-ubuntu:
  extends:
    - .build
  rules:
    - !reference [.omnibus-ubuntu_rules, rules]
  script:
    - cd omnibus-ubuntu
    - docker buildx bake --set="*.output=type=cacheonly"

build:docker-auditor:
  extends:
    - .build
  rules:
    - !reference [.docker-auditor_rules, rules]
  script:
    - cd docker-auditor
    - docker buildx bake --set="*.output=type=cacheonly"

build:vagrant-virtualbox:
  extends:
    - .build
  tags:
    - docker-virtualbox
  rules:
    - !reference [.vagrant-virtualbox_rules, rules]
  script:
    - cd vagrant-virtualbox
    - docker buildx bake --set="*.output=type=cacheonly"

.publish:
  stage: publish
  tags:
    - docker-x86_64

.publish_rules:
  rules:
    - if: $CI_COMMIT_REF_NAME != "master"
      when: never

publish:omnibus-almalinux:
  extends:
    - .publish
  tags:
    - docker-x86_64-v3
  rules:
    - !reference [.publish_rules, rules]
    - !reference [.omnibus-almalinux_rules, rules]
  script:
    - ./scripts/docker-login.sh
    - cd omnibus-almalinux
    - docker buildx bake --push

publish:omnibus-amazonlinux:
  extends:
    - .publish
  rules:
    - !reference [.publish_rules, rules]
    - !reference [.omnibus-amazonlinux_rules, rules]
  script:
    - ./scripts/docker-login.sh
    - cd omnibus-amazonlinux
    - docker buildx bake --push

publish:omnibus-debian:
  extends:
    - .publish
  rules:
    - !reference [.publish_rules, rules]
    - !reference [.omnibus-debian_rules, rules]
  script:
    - ./scripts/docker-login.sh
    - cd omnibus-debian
    - docker buildx bake --push

publish:omnibus-opensuse:
  extends:
    - .publish
  rules:
    - !reference [.publish_rules, rules]
    - !reference [.omnibus-opensuse_rules, rules]
  script:
    - ./scripts/docker-login.sh
    - cd omnibus-opensuse
    - docker buildx bake --push

publish:omnibus-rockylinux:
  extends:
    - .publish
  rules:
    - !reference [.publish_rules, rules]
    - !reference [.omnibus-rockylinux_rules, rules]
  script:
    - ./scripts/docker-login.sh
    - cd omnibus-rockylinux
    - docker buildx bake --push

publish:omnibus-ubuntu:
  extends:
    - .publish
  rules:
    - !reference [.publish_rules, rules]
    - !reference [.omnibus-ubuntu_rules, rules]
  script:
    - ./scripts/docker-login.sh
    - cd omnibus-ubuntu
    - docker buildx bake --push

publish:docker-auditor:
  extends:
    - .publish
  rules:
    - !reference [.publish_rules, rules]
    - !reference [.docker-auditor_rules, rules]
  script:
    - ./scripts/docker-login.sh
    - cd docker-auditor
    - docker buildx bake --push

publish:vagrant-virtualbox:
  extends:
    - .publish
  rules:
    - !reference [.publish_rules, rules]
    - !reference [.vagrant-virtualbox_rules, rules]
  script:
    - ./scripts/docker-login.sh
    - cd vagrant-virtualbox
    - docker buildx bake --push
